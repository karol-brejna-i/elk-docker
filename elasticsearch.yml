#cluster.name: elasticsearch
#node.name: "Franz Kafka"

#node.master: true
#node.data: true

#node.rack: rack314

#node.max_local_storage_nodes: 1


#################################### Index ####################################
#index.number_of_shards: 1
#index.number_of_replicas: 0

#################################### Paths ####################################
#path.conf: /path/to/conf
#path.data: /path/to/data
#path.data: /path/to/data1,/path/to/data2
#path.work: /path/to/work
#path.logs: /path/to/logs
#path.plugins: /path/to/plugins


#################################### Plugin ###################################
#plugin.mandatory: mapper-attachments


################################### Memory ####################################
bootstrap.mlockall: true

# Make sure that the ES_MIN_MEM and ES_MAX_MEM environment variables are set
# to the same value, and that the machine has enough memory to allocate
# for Elasticsearch, leaving enough memory for the operating system itself.
#
# You should also make sure that the Elasticsearch process is allowed to lock
# the memory, eg. by using `ulimit -l unlimited`.


############################## Network And HTTP ###############################

#network.bind_host: 192.168.0.1
#network.publish_host: 192.168.0.1
#network.host: 192.168.0.1
#transport.tcp.port: 9300
#transport.tcp.compress: true
#http.port: 9200
#http.max_content_length: 100mb
#http.enabled: false


################################### Gateway ###################################

#gateway.type: local
#gateway.recover_after_nodes: 1
#gateway.recover_after_time: 5m
#gateway.expected_nodes: 2


############################# Recovery Throttling #############################
#cluster.routing.allocation.node_initial_primaries_recoveries: 4
#cluster.routing.allocation.node_concurrent_recoveries: 2
#indices.recovery.max_bytes_per_sec: 20mb
#indices.recovery.concurrent_streams: 5


################################## Discovery ##################################

#discovery.zen.minimum_master_nodes: 1
#discovery.zen.ping.timeout: 3s

# For more information, see
# <http://elasticsearch.org/guide/en/elasticsearch/reference/current/modules-discovery-zen.html>

# Unicast discovery allows to explicitly control which nodes will be used
# to discover the cluster. It can be used when multicast is not present,
# or to restrict the cluster communication-wise.
#
# 1. Disable multicast discovery (enabled by default):
#
#discovery.zen.ping.multicast.enabled: false
#
# 2. Configure an initial list of master nodes in the cluster
#    to perform discovery when new nodes (master or data) are started:
#
#discovery.zen.ping.unicast.hosts: ["host1", "host2:port"]


################################## Slow Log ##################################
#index.search.slowlog.threshold.query.warn: 10s
#index.search.slowlog.threshold.query.info: 5s
#index.search.slowlog.threshold.query.debug: 2s
#index.search.slowlog.threshold.query.trace: 500ms

#index.search.slowlog.threshold.fetch.warn: 1s
#index.search.slowlog.threshold.fetch.info: 800ms
#index.search.slowlog.threshold.fetch.debug: 500ms
#index.search.slowlog.threshold.fetch.trace: 200ms

#index.indexing.slowlog.threshold.index.warn: 10s
#index.indexing.slowlog.threshold.index.info: 5s
#index.indexing.slowlog.threshold.index.debug: 2s
#index.indexing.slowlog.threshold.index.trace: 500ms

################################## GC Logging ################################

#monitor.jvm.gc.young.warn: 1000ms
#monitor.jvm.gc.young.info: 700ms
#monitor.jvm.gc.young.debug: 400ms

#monitor.jvm.gc.old.warn: 10s
#monitor.jvm.gc.old.info: 5s
#monitor.jvm.gc.old.debug: 2s

################################## Security ################################
#http.jsonp.enable: true
http.cors.enabled: true
http.cors.allow-origin: "/.*/"

############### scripting
script.groovy.sandbox.enabled: true
script.engine.groovy.inline.aggs: on
script.inline: on
script.indexed: on
